/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include "main.h"
extern TIM_HandleTypeDef htim3;
extern UART_HandleTypeDef huart1;
extern int rxNewData;
extern uint8_t rxBuffer[64]; 

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backgroundOut;
    touchgfx::Box backgroundIn;
    touchgfx::ButtonWithLabel btn1;
    touchgfx::TextArea labelIn;
    touchgfx::TextArea labelOut;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard encCnt;
    touchgfx::TextArea textArea1;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB565 circle1Painter;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::TextArea textArea2;
    touchgfx::TextAreaWithOneWildcard btnState;
    touchgfx::ButtonWithLabel btn2;
    touchgfx::BoxWithBorder boxWithBorder3;
    touchgfx::TextArea textArea3;
    touchgfx::TextAreaWithOneWildcard spMsg;
    touchgfx::Button btn3;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ENCCNT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar encCntBuffer[ENCCNT_SIZE];
    static const uint16_t BTNSTATE_SIZE = 32;
    touchgfx::Unicode::UnicodeChar btnStateBuffer[BTNSTATE_SIZE];
    static const uint16_t SPMSG_SIZE = 64;
    touchgfx::Unicode::UnicodeChar spMsgBuffer[SPMSG_SIZE];

private:

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_ENCCNTUPDATE_INTERVAL = 10;
    uint32_t frameCountEncCntUpdateInterval;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SCREEN1VIEWBASE_HPP
