/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TESTSCREENVIEWBASE_HPP
#define TESTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/testscreen_screen/TestScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class TestScreenViewBase : public touchgfx::View<TestScreenPresenter>
{
public:
    TestScreenViewBase();
    virtual ~TestScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void updateHeight(int value)
    {
        // Override and implement this function in TestScreen
    }

    virtual void updateWidth(int value)
    {
        // Override and implement this function in TestScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Slider sliderx;
    touchgfx::TextAreaWithOneWildcard labelx;
    touchgfx::Slider slidery;
    touchgfx::TextAreaWithOneWildcard labely;
    touchgfx::Shape<3> backgroundtriangle;
    touchgfx::PainterRGB565 backgroundtrianglePainter;
    touchgfx::Shape<3> triangle;
    touchgfx::PainterRGB565 trianglePainter;
    touchgfx::TextArea hypotneuselengthlabel;
    touchgfx::TextAreaWithOneWildcard hypotneuselength;
    touchgfx::TextArea mainlabel;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LABELX_SIZE = 16;
    touchgfx::Unicode::UnicodeChar labelxBuffer[LABELX_SIZE];
    static const uint16_t LABELY_SIZE = 16;
    touchgfx::Unicode::UnicodeChar labelyBuffer[LABELY_SIZE];
    static const uint16_t HYPOTNEUSELENGTH_SIZE = 16;
    touchgfx::Unicode::UnicodeChar hypotneuselengthBuffer[HYPOTNEUSELENGTH_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TestScreenViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // TESTSCREENVIEWBASE_HPP
