/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/staticchartscreen_screen/StaticChartScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


StaticChartScreenViewBase::StaticChartScreenViewBase() :
    frameCountupdateGraphInterval(0)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setPosition(0, 0, 480, 272);
    background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    graph1.setScaleX(1);
    graph1.setScaleY(1);
    graph1.setPosition(31, 0, 449, 248);
    graph1.setGraphAreaMargin(10, 40, 21, 30);
    graph1.setGraphAreaPadding(0, 0, 0, 0);
    graph1.setGraphRangeX(0, 100);
    graph1.setGraphRangeY(0, 100);

    graph1MajorXAxisGrid.setScale(1);
    graph1MajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graph1MajorXAxisGrid.setInterval(6);
    graph1MajorXAxisGrid.setLineWidth(1);
    graph1.addGraphElement(graph1MajorXAxisGrid);

    graph1MajorYAxisGrid.setScale(1);
    graph1MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graph1MajorYAxisGrid.setInterval(10);
    graph1MajorYAxisGrid.setLineWidth(1);
    graph1.addGraphElement(graph1MajorYAxisGrid);

    graph1MajorXAxisLabel.setScale(1);
    graph1MajorXAxisLabel.setInterval(10);
    graph1MajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_2XJ0));
    graph1MajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    graph1.addBottomElement(graph1MajorXAxisLabel);

    graph1MajorYAxisLabel.setScale(1);
    graph1MajorYAxisLabel.setInterval(10);
    graph1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_2JH5));
    graph1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    graph1.addLeftElement(graph1MajorYAxisLabel);

    graph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(196, 22, 22));
    graph1Line1.setPainter(graph1Line1Painter);
    graph1Line1.setLineWidth(5);
    graph1.addGraphElement(graph1Line1);

    ylabel.setXY(7, 67);
    ylabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ylabel.setLinespacing(0);
    ylabel.setRotation(touchgfx::TEXT_ROTATE_270);
    ylabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M2VJ));

    xlabel.setXY(182, 248);
    xlabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    xlabel.setLinespacing(0);
    xlabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MCLQ));

    add(__background);
    add(background);
    add(graph1);
    add(ylabel);
    add(xlabel);
}

void StaticChartScreenViewBase::setupScreen()
{

}

//Handles tick based events
void StaticChartScreenViewBase::handleTickEvent()
{
    frameCountupdateGraphInterval++;
    if(frameCountupdateGraphInterval == TICK_UPDATEGRAPH_INTERVAL)
    {
        //updateGraph
        //When every N tick execute C++ code
        //Execute C++ code
        float time_s = __HAL_TIM_GET_COUNTER(&htim2) / 1000000.0f;
        graph1.addDataPoint(time_s, time_s);
        frameCountupdateGraphInterval = 0;
    }

}
